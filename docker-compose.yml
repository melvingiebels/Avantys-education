version: '3'
services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-avantys
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-logs:/var/log/rabbitmq
    ports:
      - "15672:15672" # RabbitMQ management UI port
      - "5672:5672"   # RabbitMQ AMQP port
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5
    env_file:
      - .env

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    volumes:
      - sqlserverdata:/var/opt/mssql
    environment:
      SA_PASSWORD: "MelvinIsEenBot34"
      ACCEPT_EULA: "Y"
    ports:
      - 1436:1433

  guidance-management-service:
    build:
      context: ./guidance-management
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./guidance-management:/usr/src/guidance-management
    depends_on:
      - sqlserver
      - rabbitmq


  learning-resources:
    build:
      context: ./learning-resources
    ports:
      - "3002:3002"
    volumes:
      - ./learning-resources:/usr/src/guidance-management
    depends_on:
      - sqlserver
      - rabbitmq
    env_file:
      - .env

  registration-management-api:
    image: ${DOCKER_REGISTRY-}study-program-management-read
    build: 
      context: ./test-management
      dockerfile: ./Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq
    ports:
      - "3001:3001"
        
       
  study-program-management-read-api:
    image: ${DOCKER_REGISTRY-}study-program-management-read
    build:
      context: ./study-program-management/StudyProgramManagement_Read
      dockerfile: ./Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "3006:3006" 
    depends_on:
      - mongodb
      - rabbitmq

  study-program-management-write-api:
    image: ${DOCKER_REGISTRY-}study-program-management-write
    build:
      context: ./study-program-management/StudyProgramManagement_Write
      dockerfile: ./Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "3005:3005" 
    depends_on:
      - sqlserver
      - rabbitmq

  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db 
            
  invoicingapi:
    image: avantys-education/invoicingapi:1.0
    build: invoicing
    depends_on:
      - sqlserver
      - rabbitmq
    ports:
      - "3003:3003"

volumes:
  mongodb_data:
  sqlserverdata:
  rabbitmq-data:
  rabbitmq-logs: